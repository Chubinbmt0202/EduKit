/* eslint-disable @typescript-eslint/no-explicit-any */
import React, { useState } from 'react';
import { Typography, Form, Input, Button, Radio, notification } from 'antd';
import { WarningOutlined, SendOutlined, SmileOutlined, MehOutlined, FrownOutlined, HeartOutlined } from '@ant-design/icons';

const { Paragraph, Title } = Typography;
const { TextArea } = Input;


const FeedbackPage: React.FC = () => {
    const [form] = Form.useForm();
    const [isSubmitting, setIsSubmitting] = useState(false);

    // --- H√†m x·ª≠ l√Ω: G·ª¨I PH·∫¢N H·ªíI ---
    const handleSendFeedback = async () => {
        setIsSubmitting(true);

        // M√¥ ph·ªèng qu√° tr√¨nh g·ª≠i d·ªØ li·ªáu l√™n server (kho·∫£ng 1 gi√¢y)
        await new Promise(resolve => setTimeout(resolve, 1000));

        setIsSubmitting(false);

        // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
        notification.success({
            message: 'G·ª≠i Ph·∫£n h·ªìi Th√†nh c√¥ng!',
            description: 'C·∫£m ∆°n b·∫°n ƒë√£ ƒë√≥ng g√≥p √Ω ki·∫øn. Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c v√† s·∫Ω xem x√©t s·ªõm nh·∫•t.',
            icon: <SendOutlined style={{ color: '#52c41a' }} />,
        });

        // X√≥a form sau khi g·ª≠i th√†nh c√¥ng
        form.resetFields();
    };

    return (
        // TƒÉng padding v√† th√™m m√†u n·ªÅn cho c·∫£m gi√°c m·ªôt trang ƒë·ªôc l·∫≠p
        <div style={{ padding: 16, overflowY: 'auto' }}>

            <Title level={3} className='!mb-2'>Ph·∫£n h·ªìi & G√≥p √Ω c·ªßa b·∫°n üí¨</Title>
            <Paragraph type="secondary" className='!mb-6'>
                Gi√∫p ch√∫ng t√¥i c·∫£i thi·ªán ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m b·∫±ng c√°ch g·ª≠i ƒë·ªÅ xu·∫•t ho·∫∑c b√°o c√°o l·ªói.
            </Paragraph>

            {/* Gi·ªõi h·∫°n chi·ªÅu r·ªông c·ªßa Form cho trang */}
            <div style={{ margin: '0 auto' }}>
                <Form
                    form={form}
                    layout="vertical"
                    onFinish={handleSendFeedback}
                >
                    {/* Lo·∫°i Ph·∫£n h·ªìi */}
                    <Form.Item
                        name="type"
                        label={<Paragraph strong className='!mb-0'>1. Ph√¢n lo·∫°i n·ªôi dung b·∫°n mu·ªën g·ª≠i:</Paragraph>}
                        rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn lo·∫°i ph·∫£n h·ªìi' }]}
                        initialValue={'suggestion'}
                    >
                        <Radio.Group buttonStyle="solid">
                            <Radio.Button value="suggestion"><SendOutlined className='mr-1' /> ƒê·ªÅ xu·∫•t/G√≥p √Ω</Radio.Button>
                            <Radio.Button value="bug"><WarningOutlined className='mr-1' /> B√°o c√°o L·ªói (Bug)</Radio.Button>
                            <Radio.Button value="praise"><HeartOutlined className='mr-1' /> Khen ng·ª£i/ƒê·ªông vi√™n</Radio.Button>
                        </Radio.Group>
                    </Form.Item>

                    {/* M·ª©c ƒë·ªô H√†i l√≤ng (Logic ƒëi·ªÅu ki·ªán) */}
                    <Form.Item noStyle shouldUpdate>
                        {() => {
                            const feedbackType = form.getFieldValue('type');
                            if (feedbackType !== 'bug') {
                                return (
                                    <Form.Item
                                        name="rating"
                                        label={<Paragraph strong className='!mb-0'>2. M·ª©c ƒë·ªô h√†i l√≤ng chung:</Paragraph>}
                                        rules={[{ required: true, message: 'Vui l√≤ng ƒë√°nh gi√°' }]}
                                        initialValue={'good'}
                                    >
                                        <Radio.Group>
                                            <Radio.Button value="good"><SmileOutlined className='text-green-500 mr-1' /> R·∫•t t·ªët</Radio.Button>
                                            <Radio.Button value="average"><MehOutlined className='text-yellow-500 mr-1' /> B√¨nh th∆∞·ªùng</Radio.Button>
                                            <Radio.Button value="poor"><FrownOutlined className='text-red-500 mr-1' /> Ch∆∞a t·ªët</Radio.Button>
                                        </Radio.Group>
                                    </Form.Item>
                                );
                            }
                            return null;
                        }}
                    </Form.Item>


                    {/* Ti√™u ƒë·ªÅ Ph·∫£n h·ªìi */}
                    <Form.Item
                        name="title"
                        label={<Paragraph strong className='!mb-0'>3. Ti√™u ƒë·ªÅ t√≥m t·∫Øt:</Paragraph>}
                        rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p ti√™u ƒë·ªÅ t√≥m t·∫Øt' }]}
                    >
                        <Input placeholder="V√≠ d·ª•: L·ªói kh√¥ng th·ªÉ l∆∞u tab ƒêi·ªÅn t·ª´" />
                    </Form.Item>

                    {/* Chi ti·∫øt Ph·∫£n h·ªìi */}
                    <Form.Item
                        name="details"
                        label={<Paragraph strong className='!mb-0'>4. Chi ti·∫øt n·ªôi dung:</Paragraph>}
                        rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p chi ti·∫øt n·ªôi dung' }]}
                    >
                        <TextArea rows={5} placeholder="M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ ho·∫∑c ƒë·ªÅ xu·∫•t c·ªßa b·∫°n. N·∫øu l√† l·ªói, h√£y cho bi·∫øt c√°c b∆∞·ªõc ƒë·ªÉ t√°i hi·ªán." />
                    </Form.Item>

                    {/* Th√¥ng tin li√™n h·ªá */}
                    <Form.Item
                        name="contact"
                        label={<Paragraph strong className='!mb-0'>5. Th√¥ng tin li√™n h·ªá (Email/SƒêT - T√πy ch·ªçn):</Paragraph>}
                    >
                        <Input placeholder="ƒê·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ li√™n h·ªá l·∫°i n·∫øu c·∫ßn" />
                    </Form.Item>


                </Form>
                <Button
                    type="primary"
                    htmlType="submit"
                    block
                    size="large"
                    icon={<SendOutlined />}
                    loading={isSubmitting}
                    className='mt-6'
                >
                    {isSubmitting ? 'ƒêang g·ª≠i...' : 'G·ª≠i Ph·∫£n h·ªìi v√† G√≥p √Ω'}
                </Button>
            </div>
        </div>
    );
};

export default FeedbackPage;